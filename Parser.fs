// Implementation file for parser generated by fsyacc
module Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "Parser.fsy"


let (++) (str1: string) (str2: string) = str1 + "\n" + str2

let boilerplate = 
    "///////////////////////////////////////////////////////////////////////////////////" ++
    "// Start of Boilerplate" ++
    "///////////////////////////////////////////////////////////////////////////////////" ++
    "let" ++
    "    Usagi_Nakamura.Curry = (f as function) =>" ++
    "        let" ++
    "            arity = Record.FieldCount(Type.FunctionParameters(Value.Type(f)))," ++
    "            ApplyTo =" ++
    "                (args as list) =>" ++
    "                    if List.Count(args) >= arity then" ++
    "                        Function.Invoke(f, args)" ++
    "                    else" ++
    "                        (x as any) =>" ++
    "                        if List.Count(args) = arity - 1" ++
    "                        then @ApplyTo({x} & args)" ++
    "                        else @ApplyTo(args & {x})" ++
    "    in" ++
    "        ApplyTo({})" ++
    "in" ++
    "///////////////////////////////////////////////////////////////////////////////////" ++
    "// End of Boilerplate" ++
    "///////////////////////////////////////////////////////////////////////////////////" ++
    "\n\n"    

let remove_first (s: string) = s.Substring(1, s.Length - 1)


# 39 "Parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | PRIMITIVE_TYPE_EXCEPT_NULL_AND_TYPE of (string)
  | HASH_SHARED of (string)
  | HASH_TABLE of (string)
  | HASH_TIME of (string)
  | HASH_DURATION of (string)
  | HASH_INFINITY of (string)
  | HASH_NAN of (string)
  | HASH_SECTION of (string)
  | HASH_BINARY of (string)
  | HASH_DATE of (string)
  | HASH_DATETIME of (string)
  | HASH_DATETIMEZONE of (string)
  | NULL of (string)
  | NULLABLE of (string)
  | OPTIONAL of (string)
  | OR of (string)
  | OTHERWISE of (string)
  | SECTION of (string)
  | SHARED of (string)
  | THEN of (string)
  | TRUE of (string)
  | TRY of (string)
  | TYPE of (string)
  | AND of (string)
  | EACH of (string)
  | ELSE of (string)
  | ERROR of (string)
  | AS of (string)
  | FALSE of (string)
  | IF of (string)
  | IN of (string)
  | IS of (string)
  | LET of (string)
  | META of (string)
  | NOT of (string)
  | QUESTION_MARK of (string)
  | CLOSING_PARANTHESIS_FOLLOWED_BY_FUNCTION_OPERATOR of (string)
  | FUNCTION_OPERATOR of (string)
  | DOT of (string)
  | DOTDOT of (string)
  | OPENING_PARENTHESIS of (string)
  | CLOSING_PARENTHESIS of (string)
  | OPENING_BRACE of (string)
  | CLOSING_BRACE of (string)
  | OPENING_SQUARE_BRACKET of (string)
  | CLOSING_SQUARE_BRACKET of (string)
  | COMMA of (string)
  | FORWARD_PIPELINE_OPERATOR of (string)
  | EQ of (string)
  | NE of (string)
  | RELATIONAL_OPERATOR of (string)
  | ADDITIVE_OPERATOR of (string)
  | MULTIPLICATIVE_OPERATOR of (string)
  | EOF
  | IDENTIFIER_WITH_PRIME of (string)
  | IDENTIFIER of (string)
  | APPLICATION of (string)
  | WHITESPACE of (string)
  | LITERAL of (string)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_PRIMITIVE_TYPE_EXCEPT_NULL_AND_TYPE
    | TOKEN_HASH_SHARED
    | TOKEN_HASH_TABLE
    | TOKEN_HASH_TIME
    | TOKEN_HASH_DURATION
    | TOKEN_HASH_INFINITY
    | TOKEN_HASH_NAN
    | TOKEN_HASH_SECTION
    | TOKEN_HASH_BINARY
    | TOKEN_HASH_DATE
    | TOKEN_HASH_DATETIME
    | TOKEN_HASH_DATETIMEZONE
    | TOKEN_NULL
    | TOKEN_NULLABLE
    | TOKEN_OPTIONAL
    | TOKEN_OR
    | TOKEN_OTHERWISE
    | TOKEN_SECTION
    | TOKEN_SHARED
    | TOKEN_THEN
    | TOKEN_TRUE
    | TOKEN_TRY
    | TOKEN_TYPE
    | TOKEN_AND
    | TOKEN_EACH
    | TOKEN_ELSE
    | TOKEN_ERROR
    | TOKEN_AS
    | TOKEN_FALSE
    | TOKEN_IF
    | TOKEN_IN
    | TOKEN_IS
    | TOKEN_LET
    | TOKEN_META
    | TOKEN_NOT
    | TOKEN_QUESTION_MARK
    | TOKEN_CLOSING_PARANTHESIS_FOLLOWED_BY_FUNCTION_OPERATOR
    | TOKEN_FUNCTION_OPERATOR
    | TOKEN_DOT
    | TOKEN_DOTDOT
    | TOKEN_OPENING_PARENTHESIS
    | TOKEN_CLOSING_PARENTHESIS
    | TOKEN_OPENING_BRACE
    | TOKEN_CLOSING_BRACE
    | TOKEN_OPENING_SQUARE_BRACKET
    | TOKEN_CLOSING_SQUARE_BRACKET
    | TOKEN_COMMA
    | TOKEN_FORWARD_PIPELINE_OPERATOR
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_RELATIONAL_OPERATOR
    | TOKEN_ADDITIVE_OPERATOR
    | TOKEN_MULTIPLICATIVE_OPERATOR
    | TOKEN_EOF
    | TOKEN_IDENTIFIER_WITH_PRIME
    | TOKEN_IDENTIFIER
    | TOKEN_APPLICATION
    | TOKEN_WHITESPACE
    | TOKEN_LITERAL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startparse
    | NONTERM_parse
    | NONTERM_expression
    | NONTERM_expression_a
    | NONTERM_unary_expression
    | NONTERM_literal_expression
    | NONTERM_identifier_expression
    | NONTERM_generalized_identifier
    | NONTERM_generalized_identifier_part
    | NONTERM_generalized_identifier_segment
    | NONTERM_keyword_or_identifier
    | NONTERM_keyword_not_starting_hash
    | NONTERM_invoke_expression
    | NONTERM_invoke_parameter_list
    | NONTERM_forward_pipeline_expression
    | NONTERM_parenthesized_expression
    | NONTERM_item_access_expression
    | NONTERM_item_selection
    | NONTERM_optional_item_selection
    | NONTERM_item_selector
    | NONTERM_field_access_expression
    | NONTERM_field_selection
    | NONTERM_implicit_target_field_selection
    | NONTERM_field_selector
    | NONTERM_required_field_selector
    | NONTERM_optional_field_selector
    | NONTERM_projection
    | NONTERM_required_projection
    | NONTERM_optional_projection
    | NONTERM_required_selector_list
    | NONTERM_implicit_target_projection
    | NONTERM_list_expression
    | NONTERM_item_list
    | NONTERM_item_list_opt
    | NONTERM_item
    | NONTERM_record_expression
    | NONTERM_field_list_opt
    | NONTERM_field_list
    | NONTERM_field
    | NONTERM_field_name
    | NONTERM_function_expression
    | NONTERM_function_body
    | NONTERM_parameter_list
    | NONTERM_parameter_list_opt
    | NONTERM_fixed_parameter_list
    | NONTERM_optional_parameter_list
    | NONTERM_optional_parameter
    | NONTERM_parameter
    | NONTERM_return_type_opt
    | NONTERM_parameter_type_opt
    | NONTERM_assertion
    | NONTERM_nullable_primitive_type
    | NONTERM_nullable_opt
    | NONTERM_primitive_type
    | NONTERM_each_expression
    | NONTERM_each_expression_body
    | NONTERM_let_expression
    | NONTERM_variable_list
    | NONTERM_variable
    | NONTERM_if_expression

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | PRIMITIVE_TYPE_EXCEPT_NULL_AND_TYPE _ -> 0 
  | HASH_SHARED _ -> 1 
  | HASH_TABLE _ -> 2 
  | HASH_TIME _ -> 3 
  | HASH_DURATION _ -> 4 
  | HASH_INFINITY _ -> 5 
  | HASH_NAN _ -> 6 
  | HASH_SECTION _ -> 7 
  | HASH_BINARY _ -> 8 
  | HASH_DATE _ -> 9 
  | HASH_DATETIME _ -> 10 
  | HASH_DATETIMEZONE _ -> 11 
  | NULL _ -> 12 
  | NULLABLE _ -> 13 
  | OPTIONAL _ -> 14 
  | OR _ -> 15 
  | OTHERWISE _ -> 16 
  | SECTION _ -> 17 
  | SHARED _ -> 18 
  | THEN _ -> 19 
  | TRUE _ -> 20 
  | TRY _ -> 21 
  | TYPE _ -> 22 
  | AND _ -> 23 
  | EACH _ -> 24 
  | ELSE _ -> 25 
  | ERROR _ -> 26 
  | AS _ -> 27 
  | FALSE _ -> 28 
  | IF _ -> 29 
  | IN _ -> 30 
  | IS _ -> 31 
  | LET _ -> 32 
  | META _ -> 33 
  | NOT _ -> 34 
  | QUESTION_MARK _ -> 35 
  | CLOSING_PARANTHESIS_FOLLOWED_BY_FUNCTION_OPERATOR _ -> 36 
  | FUNCTION_OPERATOR _ -> 37 
  | DOT _ -> 38 
  | DOTDOT _ -> 39 
  | OPENING_PARENTHESIS _ -> 40 
  | CLOSING_PARENTHESIS _ -> 41 
  | OPENING_BRACE _ -> 42 
  | CLOSING_BRACE _ -> 43 
  | OPENING_SQUARE_BRACKET _ -> 44 
  | CLOSING_SQUARE_BRACKET _ -> 45 
  | COMMA _ -> 46 
  | FORWARD_PIPELINE_OPERATOR _ -> 47 
  | EQ _ -> 48 
  | NE _ -> 49 
  | RELATIONAL_OPERATOR _ -> 50 
  | ADDITIVE_OPERATOR _ -> 51 
  | MULTIPLICATIVE_OPERATOR _ -> 52 
  | EOF  -> 53 
  | IDENTIFIER_WITH_PRIME _ -> 54 
  | IDENTIFIER _ -> 55 
  | APPLICATION _ -> 56 
  | WHITESPACE _ -> 57 
  | LITERAL _ -> 58 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_PRIMITIVE_TYPE_EXCEPT_NULL_AND_TYPE 
  | 1 -> TOKEN_HASH_SHARED 
  | 2 -> TOKEN_HASH_TABLE 
  | 3 -> TOKEN_HASH_TIME 
  | 4 -> TOKEN_HASH_DURATION 
  | 5 -> TOKEN_HASH_INFINITY 
  | 6 -> TOKEN_HASH_NAN 
  | 7 -> TOKEN_HASH_SECTION 
  | 8 -> TOKEN_HASH_BINARY 
  | 9 -> TOKEN_HASH_DATE 
  | 10 -> TOKEN_HASH_DATETIME 
  | 11 -> TOKEN_HASH_DATETIMEZONE 
  | 12 -> TOKEN_NULL 
  | 13 -> TOKEN_NULLABLE 
  | 14 -> TOKEN_OPTIONAL 
  | 15 -> TOKEN_OR 
  | 16 -> TOKEN_OTHERWISE 
  | 17 -> TOKEN_SECTION 
  | 18 -> TOKEN_SHARED 
  | 19 -> TOKEN_THEN 
  | 20 -> TOKEN_TRUE 
  | 21 -> TOKEN_TRY 
  | 22 -> TOKEN_TYPE 
  | 23 -> TOKEN_AND 
  | 24 -> TOKEN_EACH 
  | 25 -> TOKEN_ELSE 
  | 26 -> TOKEN_ERROR 
  | 27 -> TOKEN_AS 
  | 28 -> TOKEN_FALSE 
  | 29 -> TOKEN_IF 
  | 30 -> TOKEN_IN 
  | 31 -> TOKEN_IS 
  | 32 -> TOKEN_LET 
  | 33 -> TOKEN_META 
  | 34 -> TOKEN_NOT 
  | 35 -> TOKEN_QUESTION_MARK 
  | 36 -> TOKEN_CLOSING_PARANTHESIS_FOLLOWED_BY_FUNCTION_OPERATOR 
  | 37 -> TOKEN_FUNCTION_OPERATOR 
  | 38 -> TOKEN_DOT 
  | 39 -> TOKEN_DOTDOT 
  | 40 -> TOKEN_OPENING_PARENTHESIS 
  | 41 -> TOKEN_CLOSING_PARENTHESIS 
  | 42 -> TOKEN_OPENING_BRACE 
  | 43 -> TOKEN_CLOSING_BRACE 
  | 44 -> TOKEN_OPENING_SQUARE_BRACKET 
  | 45 -> TOKEN_CLOSING_SQUARE_BRACKET 
  | 46 -> TOKEN_COMMA 
  | 47 -> TOKEN_FORWARD_PIPELINE_OPERATOR 
  | 48 -> TOKEN_EQ 
  | 49 -> TOKEN_NE 
  | 50 -> TOKEN_RELATIONAL_OPERATOR 
  | 51 -> TOKEN_ADDITIVE_OPERATOR 
  | 52 -> TOKEN_MULTIPLICATIVE_OPERATOR 
  | 53 -> TOKEN_EOF 
  | 54 -> TOKEN_IDENTIFIER_WITH_PRIME 
  | 55 -> TOKEN_IDENTIFIER 
  | 56 -> TOKEN_APPLICATION 
  | 57 -> TOKEN_WHITESPACE 
  | 58 -> TOKEN_LITERAL 
  | 61 -> TOKEN_end_of_input
  | 59 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startparse 
    | 1 -> NONTERM_parse 
    | 2 -> NONTERM_parse 
    | 3 -> NONTERM_expression 
    | 4 -> NONTERM_expression_a 
    | 5 -> NONTERM_expression_a 
    | 6 -> NONTERM_expression_a 
    | 7 -> NONTERM_expression_a 
    | 8 -> NONTERM_expression_a 
    | 9 -> NONTERM_expression_a 
    | 10 -> NONTERM_expression_a 
    | 11 -> NONTERM_expression_a 
    | 12 -> NONTERM_expression_a 
    | 13 -> NONTERM_expression_a 
    | 14 -> NONTERM_expression_a 
    | 15 -> NONTERM_expression_a 
    | 16 -> NONTERM_expression_a 
    | 17 -> NONTERM_expression_a 
    | 18 -> NONTERM_expression_a 
    | 19 -> NONTERM_expression_a 
    | 20 -> NONTERM_expression_a 
    | 21 -> NONTERM_expression_a 
    | 22 -> NONTERM_expression_a 
    | 23 -> NONTERM_expression_a 
    | 24 -> NONTERM_expression_a 
    | 25 -> NONTERM_expression_a 
    | 26 -> NONTERM_expression_a 
    | 27 -> NONTERM_expression_a 
    | 28 -> NONTERM_unary_expression 
    | 29 -> NONTERM_unary_expression 
    | 30 -> NONTERM_literal_expression 
    | 31 -> NONTERM_literal_expression 
    | 32 -> NONTERM_literal_expression 
    | 33 -> NONTERM_literal_expression 
    | 34 -> NONTERM_identifier_expression 
    | 35 -> NONTERM_identifier_expression 
    | 36 -> NONTERM_generalized_identifier 
    | 37 -> NONTERM_generalized_identifier 
    | 38 -> NONTERM_generalized_identifier_part 
    | 39 -> NONTERM_generalized_identifier_segment 
    | 40 -> NONTERM_generalized_identifier_segment 
    | 41 -> NONTERM_keyword_or_identifier 
    | 42 -> NONTERM_keyword_or_identifier 
    | 43 -> NONTERM_keyword_not_starting_hash 
    | 44 -> NONTERM_keyword_not_starting_hash 
    | 45 -> NONTERM_keyword_not_starting_hash 
    | 46 -> NONTERM_keyword_not_starting_hash 
    | 47 -> NONTERM_keyword_not_starting_hash 
    | 48 -> NONTERM_keyword_not_starting_hash 
    | 49 -> NONTERM_keyword_not_starting_hash 
    | 50 -> NONTERM_keyword_not_starting_hash 
    | 51 -> NONTERM_keyword_not_starting_hash 
    | 52 -> NONTERM_keyword_not_starting_hash 
    | 53 -> NONTERM_keyword_not_starting_hash 
    | 54 -> NONTERM_keyword_not_starting_hash 
    | 55 -> NONTERM_keyword_not_starting_hash 
    | 56 -> NONTERM_keyword_not_starting_hash 
    | 57 -> NONTERM_keyword_not_starting_hash 
    | 58 -> NONTERM_keyword_not_starting_hash 
    | 59 -> NONTERM_keyword_not_starting_hash 
    | 60 -> NONTERM_keyword_not_starting_hash 
    | 61 -> NONTERM_keyword_not_starting_hash 
    | 62 -> NONTERM_keyword_not_starting_hash 
    | 63 -> NONTERM_keyword_not_starting_hash 
    | 64 -> NONTERM_invoke_expression 
    | 65 -> NONTERM_invoke_parameter_list 
    | 66 -> NONTERM_invoke_parameter_list 
    | 67 -> NONTERM_forward_pipeline_expression 
    | 68 -> NONTERM_parenthesized_expression 
    | 69 -> NONTERM_item_access_expression 
    | 70 -> NONTERM_item_access_expression 
    | 71 -> NONTERM_item_selection 
    | 72 -> NONTERM_optional_item_selection 
    | 73 -> NONTERM_item_selector 
    | 74 -> NONTERM_field_access_expression 
    | 75 -> NONTERM_field_access_expression 
    | 76 -> NONTERM_field_access_expression 
    | 77 -> NONTERM_field_access_expression 
    | 78 -> NONTERM_field_selection 
    | 79 -> NONTERM_field_selection 
    | 80 -> NONTERM_implicit_target_field_selection 
    | 81 -> NONTERM_field_selector 
    | 82 -> NONTERM_field_selector 
    | 83 -> NONTERM_required_field_selector 
    | 84 -> NONTERM_optional_field_selector 
    | 85 -> NONTERM_projection 
    | 86 -> NONTERM_projection 
    | 87 -> NONTERM_required_projection 
    | 88 -> NONTERM_optional_projection 
    | 89 -> NONTERM_required_selector_list 
    | 90 -> NONTERM_required_selector_list 
    | 91 -> NONTERM_implicit_target_projection 
    | 92 -> NONTERM_implicit_target_projection 
    | 93 -> NONTERM_list_expression 
    | 94 -> NONTERM_item_list 
    | 95 -> NONTERM_item_list 
    | 96 -> NONTERM_item_list_opt 
    | 97 -> NONTERM_item_list_opt 
    | 98 -> NONTERM_item 
    | 99 -> NONTERM_item 
    | 100 -> NONTERM_record_expression 
    | 101 -> NONTERM_field_list_opt 
    | 102 -> NONTERM_field_list_opt 
    | 103 -> NONTERM_field_list 
    | 104 -> NONTERM_field_list 
    | 105 -> NONTERM_field 
    | 106 -> NONTERM_field_name 
    | 107 -> NONTERM_function_expression 
    | 108 -> NONTERM_function_body 
    | 109 -> NONTERM_parameter_list 
    | 110 -> NONTERM_parameter_list 
    | 111 -> NONTERM_parameter_list_opt 
    | 112 -> NONTERM_parameter_list_opt 
    | 113 -> NONTERM_fixed_parameter_list 
    | 114 -> NONTERM_fixed_parameter_list 
    | 115 -> NONTERM_optional_parameter_list 
    | 116 -> NONTERM_optional_parameter_list 
    | 117 -> NONTERM_optional_parameter 
    | 118 -> NONTERM_parameter 
    | 119 -> NONTERM_return_type_opt 
    | 120 -> NONTERM_return_type_opt 
    | 121 -> NONTERM_parameter_type_opt 
    | 122 -> NONTERM_parameter_type_opt 
    | 123 -> NONTERM_assertion 
    | 124 -> NONTERM_nullable_primitive_type 
    | 125 -> NONTERM_nullable_opt 
    | 126 -> NONTERM_nullable_opt 
    | 127 -> NONTERM_primitive_type 
    | 128 -> NONTERM_each_expression 
    | 129 -> NONTERM_each_expression_body 
    | 130 -> NONTERM_let_expression 
    | 131 -> NONTERM_variable_list 
    | 132 -> NONTERM_variable_list 
    | 133 -> NONTERM_variable 
    | 134 -> NONTERM_if_expression 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 61 
let _fsyacc_tagOfErrorTerminal = 59

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | PRIMITIVE_TYPE_EXCEPT_NULL_AND_TYPE _ -> "PRIMITIVE_TYPE_EXCEPT_NULL_AND_TYPE" 
  | HASH_SHARED _ -> "HASH_SHARED" 
  | HASH_TABLE _ -> "HASH_TABLE" 
  | HASH_TIME _ -> "HASH_TIME" 
  | HASH_DURATION _ -> "HASH_DURATION" 
  | HASH_INFINITY _ -> "HASH_INFINITY" 
  | HASH_NAN _ -> "HASH_NAN" 
  | HASH_SECTION _ -> "HASH_SECTION" 
  | HASH_BINARY _ -> "HASH_BINARY" 
  | HASH_DATE _ -> "HASH_DATE" 
  | HASH_DATETIME _ -> "HASH_DATETIME" 
  | HASH_DATETIMEZONE _ -> "HASH_DATETIMEZONE" 
  | NULL _ -> "NULL" 
  | NULLABLE _ -> "NULLABLE" 
  | OPTIONAL _ -> "OPTIONAL" 
  | OR _ -> "OR" 
  | OTHERWISE _ -> "OTHERWISE" 
  | SECTION _ -> "SECTION" 
  | SHARED _ -> "SHARED" 
  | THEN _ -> "THEN" 
  | TRUE _ -> "TRUE" 
  | TRY _ -> "TRY" 
  | TYPE _ -> "TYPE" 
  | AND _ -> "AND" 
  | EACH _ -> "EACH" 
  | ELSE _ -> "ELSE" 
  | ERROR _ -> "ERROR" 
  | AS _ -> "AS" 
  | FALSE _ -> "FALSE" 
  | IF _ -> "IF" 
  | IN _ -> "IN" 
  | IS _ -> "IS" 
  | LET _ -> "LET" 
  | META _ -> "META" 
  | NOT _ -> "NOT" 
  | QUESTION_MARK _ -> "QUESTION_MARK" 
  | CLOSING_PARANTHESIS_FOLLOWED_BY_FUNCTION_OPERATOR _ -> "CLOSING_PARANTHESIS_FOLLOWED_BY_FUNCTION_OPERATOR" 
  | FUNCTION_OPERATOR _ -> "FUNCTION_OPERATOR" 
  | DOT _ -> "DOT" 
  | DOTDOT _ -> "DOTDOT" 
  | OPENING_PARENTHESIS _ -> "OPENING_PARENTHESIS" 
  | CLOSING_PARENTHESIS _ -> "CLOSING_PARENTHESIS" 
  | OPENING_BRACE _ -> "OPENING_BRACE" 
  | CLOSING_BRACE _ -> "CLOSING_BRACE" 
  | OPENING_SQUARE_BRACKET _ -> "OPENING_SQUARE_BRACKET" 
  | CLOSING_SQUARE_BRACKET _ -> "CLOSING_SQUARE_BRACKET" 
  | COMMA _ -> "COMMA" 
  | FORWARD_PIPELINE_OPERATOR _ -> "FORWARD_PIPELINE_OPERATOR" 
  | EQ _ -> "EQ" 
  | NE _ -> "NE" 
  | RELATIONAL_OPERATOR _ -> "RELATIONAL_OPERATOR" 
  | ADDITIVE_OPERATOR _ -> "ADDITIVE_OPERATOR" 
  | MULTIPLICATIVE_OPERATOR _ -> "MULTIPLICATIVE_OPERATOR" 
  | EOF  -> "EOF" 
  | IDENTIFIER_WITH_PRIME _ -> "IDENTIFIER_WITH_PRIME" 
  | IDENTIFIER _ -> "IDENTIFIER" 
  | APPLICATION _ -> "APPLICATION" 
  | WHITESPACE _ -> "WHITESPACE" 
  | LITERAL _ -> "LITERAL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | PRIMITIVE_TYPE_EXCEPT_NULL_AND_TYPE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_SHARED _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_TABLE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_TIME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_DURATION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_INFINITY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_NAN _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_SECTION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_BINARY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_DATE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_DATETIME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_DATETIMEZONE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NULL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NULLABLE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OPTIONAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OTHERWISE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SECTION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | SHARED _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | THEN _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TRUE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TRY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | TYPE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | AND _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EACH _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ELSE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ERROR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | AS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FALSE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IN _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | META _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | QUESTION_MARK _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CLOSING_PARANTHESIS_FOLLOWED_BY_FUNCTION_OPERATOR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FUNCTION_OPERATOR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DOTDOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OPENING_PARENTHESIS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CLOSING_PARENTHESIS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OPENING_BRACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CLOSING_BRACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OPENING_SQUARE_BRACKET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CLOSING_SQUARE_BRACKET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COMMA _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FORWARD_PIPELINE_OPERATOR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EQ _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RELATIONAL_OPERATOR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ADDITIVE_OPERATOR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | MULTIPLICATIVE_OPERATOR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF  -> (null : System.Object) 
  | IDENTIFIER_WITH_PRIME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENTIFIER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | APPLICATION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WHITESPACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LITERAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 27us; 65535us; 0us; 5us; 2us; 3us; 31us; 8us; 32us; 9us; 37us; 10us; 38us; 11us; 39us; 12us; 40us; 13us; 41us; 14us; 42us; 15us; 57us; 16us; 58us; 17us; 98us; 18us; 99us; 19us; 100us; 20us; 104us; 21us; 136us; 22us; 140us; 22us; 143us; 23us; 151us; 24us; 153us; 25us; 176us; 25us; 181us; 26us; 186us; 27us; 187us; 28us; 188us; 29us; 189us; 30us; 27us; 65535us; 0us; 7us; 2us; 7us; 31us; 7us; 32us; 7us; 37us; 7us; 38us; 7us; 39us; 7us; 40us; 7us; 41us; 7us; 42us; 7us; 57us; 7us; 58us; 7us; 98us; 7us; 99us; 7us; 100us; 7us; 104us; 7us; 136us; 7us; 140us; 7us; 143us; 7us; 151us; 7us; 153us; 7us; 176us; 7us; 181us; 7us; 186us; 7us; 187us; 7us; 188us; 7us; 189us; 7us; 27us; 65535us; 0us; 43us; 2us; 43us; 31us; 43us; 32us; 43us; 37us; 43us; 38us; 43us; 39us; 43us; 40us; 43us; 41us; 43us; 42us; 43us; 57us; 43us; 58us; 43us; 98us; 43us; 99us; 43us; 100us; 43us; 104us; 43us; 136us; 43us; 140us; 43us; 143us; 43us; 151us; 43us; 153us; 43us; 176us; 43us; 181us; 43us; 186us; 43us; 187us; 43us; 188us; 43us; 189us; 43us; 27us; 65535us; 0us; 44us; 2us; 44us; 31us; 44us; 32us; 44us; 37us; 44us; 38us; 44us; 39us; 44us; 40us; 44us; 41us; 44us; 42us; 44us; 57us; 44us; 58us; 44us; 98us; 44us; 99us; 44us; 100us; 44us; 104us; 44us; 136us; 44us; 140us; 44us; 143us; 44us; 151us; 44us; 153us; 44us; 176us; 44us; 181us; 44us; 186us; 44us; 187us; 44us; 188us; 44us; 189us; 44us; 27us; 65535us; 0us; 47us; 2us; 47us; 31us; 47us; 32us; 47us; 37us; 47us; 38us; 47us; 39us; 47us; 40us; 47us; 41us; 47us; 42us; 47us; 57us; 47us; 58us; 47us; 98us; 47us; 99us; 47us; 100us; 47us; 104us; 47us; 136us; 47us; 140us; 47us; 143us; 47us; 151us; 47us; 153us; 47us; 176us; 47us; 181us; 47us; 186us; 47us; 187us; 47us; 188us; 47us; 189us; 47us; 4us; 65535us; 117us; 67us; 118us; 67us; 119us; 67us; 148us; 67us; 5us; 65535us; 67us; 68us; 117us; 66us; 118us; 66us; 119us; 66us; 148us; 66us; 5us; 65535us; 67us; 69us; 117us; 69us; 118us; 69us; 119us; 69us; 148us; 69us; 6us; 65535us; 67us; 70us; 71us; 72us; 117us; 70us; 118us; 70us; 119us; 70us; 148us; 70us; 6us; 65535us; 67us; 74us; 71us; 74us; 117us; 74us; 118us; 74us; 119us; 74us; 148us; 74us; 27us; 65535us; 0us; 48us; 2us; 48us; 31us; 48us; 32us; 48us; 37us; 48us; 38us; 48us; 39us; 48us; 40us; 48us; 41us; 48us; 42us; 48us; 57us; 48us; 58us; 48us; 98us; 48us; 99us; 48us; 100us; 48us; 104us; 48us; 136us; 48us; 140us; 48us; 143us; 48us; 151us; 48us; 153us; 48us; 176us; 48us; 181us; 48us; 186us; 48us; 187us; 48us; 188us; 48us; 189us; 48us; 25us; 65535us; 3us; 96us; 5us; 96us; 8us; 96us; 9us; 96us; 10us; 96us; 11us; 96us; 12us; 96us; 13us; 96us; 14us; 96us; 15us; 96us; 16us; 96us; 17us; 96us; 18us; 97us; 19us; 96us; 20us; 96us; 21us; 96us; 22us; 96us; 23us; 96us; 24us; 96us; 25us; 96us; 26us; 96us; 27us; 96us; 28us; 96us; 29us; 96us; 30us; 96us; 27us; 65535us; 0us; 49us; 2us; 49us; 31us; 49us; 32us; 49us; 37us; 49us; 38us; 49us; 39us; 49us; 40us; 49us; 41us; 49us; 42us; 49us; 57us; 49us; 58us; 49us; 98us; 49us; 99us; 49us; 100us; 49us; 104us; 49us; 136us; 49us; 140us; 49us; 143us; 49us; 151us; 49us; 153us; 49us; 176us; 49us; 181us; 49us; 186us; 49us; 187us; 49us; 188us; 49us; 189us; 49us; 27us; 65535us; 0us; 50us; 2us; 50us; 31us; 50us; 32us; 50us; 37us; 50us; 38us; 50us; 39us; 50us; 40us; 50us; 41us; 50us; 42us; 50us; 57us; 50us; 58us; 50us; 98us; 50us; 99us; 50us; 100us; 50us; 104us; 50us; 136us; 50us; 140us; 50us; 143us; 50us; 151us; 50us; 153us; 50us; 176us; 50us; 181us; 50us; 186us; 50us; 187us; 50us; 188us; 50us; 189us; 50us; 27us; 65535us; 0us; 55us; 2us; 55us; 31us; 55us; 32us; 55us; 37us; 55us; 38us; 55us; 39us; 55us; 40us; 55us; 41us; 55us; 42us; 55us; 57us; 55us; 58us; 55us; 98us; 55us; 99us; 55us; 100us; 55us; 104us; 55us; 136us; 55us; 140us; 55us; 143us; 55us; 151us; 55us; 153us; 55us; 176us; 55us; 181us; 55us; 186us; 55us; 187us; 55us; 188us; 55us; 189us; 55us; 27us; 65535us; 0us; 102us; 2us; 102us; 31us; 102us; 32us; 102us; 37us; 102us; 38us; 102us; 39us; 102us; 40us; 102us; 41us; 102us; 42us; 102us; 57us; 102us; 58us; 102us; 98us; 102us; 99us; 102us; 100us; 102us; 104us; 102us; 136us; 102us; 140us; 102us; 143us; 102us; 151us; 102us; 153us; 102us; 176us; 102us; 181us; 102us; 186us; 102us; 187us; 102us; 188us; 102us; 189us; 102us; 27us; 65535us; 0us; 103us; 2us; 103us; 31us; 103us; 32us; 103us; 37us; 103us; 38us; 103us; 39us; 103us; 40us; 103us; 41us; 103us; 42us; 103us; 57us; 103us; 58us; 103us; 98us; 103us; 99us; 103us; 100us; 103us; 104us; 103us; 136us; 103us; 140us; 103us; 143us; 103us; 151us; 103us; 153us; 103us; 176us; 103us; 181us; 103us; 186us; 103us; 187us; 103us; 188us; 103us; 189us; 103us; 1us; 65535us; 104us; 105us; 27us; 65535us; 0us; 56us; 2us; 56us; 31us; 56us; 32us; 56us; 37us; 56us; 38us; 56us; 39us; 56us; 40us; 56us; 41us; 56us; 42us; 56us; 57us; 56us; 58us; 56us; 98us; 56us; 99us; 56us; 100us; 56us; 104us; 56us; 136us; 56us; 140us; 56us; 143us; 56us; 151us; 56us; 153us; 56us; 176us; 56us; 181us; 56us; 186us; 56us; 187us; 56us; 188us; 56us; 189us; 56us; 27us; 65535us; 0us; 108us; 2us; 108us; 31us; 108us; 32us; 108us; 37us; 108us; 38us; 108us; 39us; 108us; 40us; 108us; 41us; 108us; 42us; 108us; 57us; 108us; 58us; 108us; 98us; 108us; 99us; 108us; 100us; 108us; 104us; 108us; 136us; 108us; 140us; 108us; 143us; 108us; 151us; 108us; 153us; 108us; 176us; 108us; 181us; 108us; 186us; 108us; 187us; 108us; 188us; 108us; 189us; 108us; 27us; 65535us; 0us; 109us; 2us; 109us; 31us; 109us; 32us; 109us; 37us; 109us; 38us; 109us; 39us; 109us; 40us; 109us; 41us; 109us; 42us; 109us; 57us; 109us; 58us; 109us; 98us; 109us; 99us; 109us; 100us; 109us; 104us; 109us; 136us; 109us; 140us; 109us; 143us; 109us; 151us; 109us; 153us; 109us; 176us; 109us; 181us; 109us; 186us; 109us; 187us; 109us; 188us; 109us; 189us; 109us; 52us; 65535us; 0us; 114us; 2us; 114us; 3us; 112us; 5us; 112us; 8us; 112us; 9us; 112us; 10us; 112us; 11us; 112us; 12us; 112us; 13us; 112us; 14us; 112us; 15us; 112us; 16us; 112us; 17us; 112us; 18us; 112us; 19us; 112us; 20us; 112us; 21us; 112us; 22us; 112us; 23us; 112us; 24us; 112us; 25us; 112us; 26us; 112us; 27us; 112us; 28us; 112us; 29us; 112us; 30us; 112us; 31us; 114us; 32us; 114us; 37us; 114us; 38us; 114us; 39us; 114us; 40us; 114us; 41us; 114us; 42us; 114us; 57us; 114us; 58us; 114us; 98us; 113us; 99us; 114us; 100us; 114us; 104us; 114us; 136us; 114us; 140us; 114us; 143us; 114us; 151us; 114us; 153us; 114us; 176us; 114us; 181us; 114us; 186us; 114us; 187us; 114us; 188us; 114us; 189us; 114us; 55us; 65535us; 0us; 115us; 2us; 115us; 3us; 115us; 5us; 115us; 8us; 115us; 9us; 115us; 10us; 115us; 11us; 115us; 12us; 115us; 13us; 115us; 14us; 115us; 15us; 115us; 16us; 115us; 17us; 115us; 18us; 115us; 19us; 115us; 20us; 115us; 21us; 115us; 22us; 115us; 23us; 115us; 24us; 115us; 25us; 115us; 26us; 115us; 27us; 115us; 28us; 115us; 29us; 115us; 30us; 115us; 31us; 115us; 32us; 115us; 37us; 115us; 38us; 115us; 39us; 115us; 40us; 115us; 41us; 115us; 42us; 115us; 57us; 115us; 58us; 115us; 98us; 115us; 99us; 115us; 100us; 115us; 104us; 115us; 118us; 131us; 119us; 131us; 132us; 131us; 136us; 115us; 140us; 115us; 143us; 115us; 151us; 115us; 153us; 115us; 176us; 115us; 181us; 115us; 186us; 115us; 187us; 115us; 188us; 115us; 189us; 115us; 52us; 65535us; 0us; 116us; 2us; 116us; 3us; 116us; 5us; 116us; 8us; 116us; 9us; 116us; 10us; 116us; 11us; 116us; 12us; 116us; 13us; 116us; 14us; 116us; 15us; 116us; 16us; 116us; 17us; 116us; 18us; 116us; 19us; 116us; 20us; 116us; 21us; 116us; 22us; 116us; 23us; 116us; 24us; 116us; 25us; 116us; 26us; 116us; 27us; 116us; 28us; 116us; 29us; 116us; 30us; 116us; 31us; 116us; 32us; 116us; 37us; 116us; 38us; 116us; 39us; 116us; 40us; 116us; 41us; 116us; 42us; 116us; 57us; 116us; 58us; 116us; 98us; 116us; 99us; 116us; 100us; 116us; 104us; 116us; 136us; 116us; 140us; 116us; 143us; 116us; 151us; 116us; 153us; 116us; 176us; 116us; 181us; 116us; 186us; 116us; 187us; 116us; 188us; 116us; 189us; 116us; 27us; 65535us; 0us; 110us; 2us; 110us; 31us; 110us; 32us; 110us; 37us; 110us; 38us; 110us; 39us; 110us; 40us; 110us; 41us; 110us; 42us; 110us; 57us; 110us; 58us; 110us; 98us; 110us; 99us; 110us; 100us; 110us; 104us; 110us; 136us; 110us; 140us; 110us; 143us; 110us; 151us; 110us; 153us; 110us; 176us; 110us; 181us; 110us; 186us; 110us; 187us; 110us; 188us; 110us; 189us; 110us; 52us; 65535us; 0us; 134us; 2us; 134us; 3us; 126us; 5us; 126us; 8us; 126us; 9us; 126us; 10us; 126us; 11us; 126us; 12us; 126us; 13us; 126us; 14us; 126us; 15us; 126us; 16us; 126us; 17us; 126us; 18us; 126us; 19us; 126us; 20us; 126us; 21us; 126us; 22us; 126us; 23us; 126us; 24us; 126us; 25us; 126us; 26us; 126us; 27us; 126us; 28us; 126us; 29us; 126us; 30us; 126us; 31us; 134us; 32us; 134us; 37us; 134us; 38us; 134us; 39us; 134us; 40us; 134us; 41us; 134us; 42us; 134us; 57us; 134us; 58us; 134us; 98us; 134us; 99us; 134us; 100us; 134us; 104us; 134us; 136us; 134us; 140us; 134us; 143us; 134us; 151us; 134us; 153us; 134us; 176us; 134us; 181us; 134us; 186us; 134us; 187us; 134us; 188us; 134us; 189us; 134us; 52us; 65535us; 0us; 135us; 2us; 135us; 3us; 127us; 5us; 127us; 8us; 127us; 9us; 127us; 10us; 127us; 11us; 127us; 12us; 127us; 13us; 127us; 14us; 127us; 15us; 127us; 16us; 127us; 17us; 127us; 18us; 127us; 19us; 127us; 20us; 127us; 21us; 127us; 22us; 127us; 23us; 127us; 24us; 127us; 25us; 127us; 26us; 127us; 27us; 127us; 28us; 127us; 29us; 127us; 30us; 127us; 31us; 135us; 32us; 135us; 37us; 135us; 38us; 135us; 39us; 135us; 40us; 135us; 41us; 135us; 42us; 135us; 57us; 135us; 58us; 135us; 98us; 135us; 99us; 135us; 100us; 135us; 104us; 135us; 136us; 135us; 140us; 135us; 143us; 135us; 151us; 135us; 153us; 135us; 176us; 135us; 181us; 135us; 186us; 135us; 187us; 135us; 188us; 135us; 189us; 135us; 3us; 65535us; 118us; 128us; 119us; 128us; 132us; 133us; 27us; 65535us; 0us; 111us; 2us; 111us; 31us; 111us; 32us; 111us; 37us; 111us; 38us; 111us; 39us; 111us; 40us; 111us; 41us; 111us; 42us; 111us; 57us; 111us; 58us; 111us; 98us; 111us; 99us; 111us; 100us; 111us; 104us; 111us; 136us; 111us; 140us; 111us; 143us; 111us; 151us; 111us; 153us; 111us; 176us; 111us; 181us; 111us; 186us; 111us; 187us; 111us; 188us; 111us; 189us; 111us; 27us; 65535us; 0us; 51us; 2us; 51us; 31us; 51us; 32us; 51us; 37us; 51us; 38us; 51us; 39us; 51us; 40us; 51us; 41us; 51us; 42us; 51us; 57us; 51us; 58us; 51us; 98us; 51us; 99us; 51us; 100us; 51us; 104us; 51us; 136us; 51us; 140us; 51us; 143us; 51us; 151us; 51us; 153us; 51us; 176us; 51us; 181us; 51us; 186us; 51us; 187us; 51us; 188us; 51us; 189us; 51us; 2us; 65535us; 136us; 142us; 140us; 141us; 1us; 65535us; 136us; 137us; 2us; 65535us; 136us; 139us; 140us; 139us; 27us; 65535us; 0us; 52us; 2us; 52us; 31us; 52us; 32us; 52us; 37us; 52us; 38us; 52us; 39us; 52us; 40us; 52us; 41us; 52us; 42us; 52us; 57us; 52us; 58us; 52us; 98us; 52us; 99us; 52us; 100us; 52us; 104us; 52us; 136us; 52us; 140us; 52us; 143us; 52us; 151us; 52us; 153us; 52us; 176us; 52us; 181us; 52us; 186us; 52us; 187us; 52us; 188us; 52us; 189us; 52us; 1us; 65535us; 119us; 144us; 2us; 65535us; 119us; 146us; 148us; 149us; 2us; 65535us; 119us; 147us; 148us; 147us; 4us; 65535us; 117us; 120us; 118us; 121us; 119us; 122us; 148us; 150us; 27us; 65535us; 0us; 53us; 2us; 53us; 31us; 53us; 32us; 53us; 37us; 53us; 38us; 53us; 39us; 53us; 40us; 53us; 41us; 53us; 42us; 53us; 57us; 53us; 58us; 53us; 98us; 53us; 99us; 53us; 100us; 53us; 104us; 53us; 136us; 53us; 140us; 53us; 143us; 53us; 151us; 53us; 153us; 53us; 176us; 53us; 181us; 53us; 186us; 53us; 187us; 53us; 188us; 53us; 189us; 53us; 2us; 65535us; 153us; 154us; 176us; 178us; 1us; 65535us; 100us; 158us; 1us; 65535us; 100us; 152us; 2us; 65535us; 100us; 155us; 160us; 161us; 2us; 65535us; 156us; 157us; 163us; 164us; 2us; 65535us; 156us; 162us; 163us; 162us; 3us; 65535us; 100us; 159us; 160us; 159us; 165us; 166us; 0us; 65535us; 2us; 65535us; 64us; 168us; 167us; 168us; 2us; 65535us; 64us; 169us; 167us; 169us; 3us; 65535us; 33us; 34us; 35us; 36us; 170us; 171us; 3us; 65535us; 33us; 172us; 35us; 172us; 170us; 172us; 1us; 65535us; 172us; 173us; 27us; 65535us; 0us; 54us; 2us; 54us; 31us; 54us; 32us; 54us; 37us; 54us; 38us; 54us; 39us; 54us; 40us; 54us; 41us; 54us; 42us; 54us; 57us; 54us; 58us; 54us; 98us; 54us; 99us; 54us; 100us; 54us; 104us; 54us; 136us; 54us; 140us; 54us; 143us; 54us; 151us; 54us; 153us; 54us; 176us; 54us; 181us; 54us; 186us; 54us; 187us; 54us; 188us; 54us; 189us; 54us; 1us; 65535us; 176us; 177us; 27us; 65535us; 0us; 45us; 2us; 45us; 31us; 45us; 32us; 45us; 37us; 45us; 38us; 45us; 39us; 45us; 40us; 45us; 41us; 45us; 42us; 45us; 57us; 45us; 58us; 45us; 98us; 45us; 99us; 45us; 100us; 45us; 104us; 45us; 136us; 45us; 140us; 45us; 143us; 45us; 151us; 45us; 153us; 45us; 176us; 45us; 181us; 45us; 186us; 45us; 187us; 45us; 188us; 45us; 189us; 45us; 2us; 65535us; 179us; 180us; 183us; 184us; 2us; 65535us; 179us; 182us; 183us; 182us; 27us; 65535us; 0us; 46us; 2us; 46us; 31us; 46us; 32us; 46us; 37us; 46us; 38us; 46us; 39us; 46us; 40us; 46us; 41us; 46us; 42us; 46us; 57us; 46us; 58us; 46us; 98us; 46us; 99us; 46us; 100us; 46us; 104us; 46us; 136us; 46us; 140us; 46us; 143us; 46us; 151us; 46us; 153us; 46us; 176us; 46us; 181us; 46us; 186us; 46us; 187us; 46us; 188us; 46us; 189us; 46us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 31us; 59us; 87us; 115us; 143us; 148us; 154us; 160us; 167us; 174us; 202us; 228us; 256us; 284us; 312us; 340us; 368us; 370us; 398us; 426us; 454us; 507us; 563us; 616us; 644us; 697us; 750us; 754us; 782us; 810us; 813us; 815us; 818us; 846us; 848us; 851us; 854us; 859us; 887us; 890us; 892us; 894us; 897us; 900us; 903us; 907us; 908us; 911us; 914us; 918us; 922us; 924us; 952us; 954us; 982us; 985us; 988us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 19us; 1us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 1us; 1us; 19us; 2us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 1us; 2us; 1us; 3us; 19us; 4us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 19us; 4us; 5us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 19us; 4us; 5us; 6us; 7us; 8us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 28us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 29us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 20us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 65us; 66us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 68us; 71us; 72us; 78us; 79us; 85us; 86us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 73us; 78us; 79us; 85us; 86us; 20us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 98us; 99us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 99us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 105us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 108us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 130us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 133us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 134us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 134us; 19us; 4us; 5us; 6us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 64us; 67us; 71us; 72us; 78us; 79us; 85us; 86us; 134us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 10us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 14us; 1us; 15us; 1us; 16us; 1us; 17us; 1us; 18us; 1us; 19us; 1us; 20us; 1us; 21us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 26us; 1us; 27us; 1us; 28us; 1us; 29us; 1us; 30us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 34us; 2us; 34us; 118us; 1us; 35us; 1us; 36us; 2us; 37us; 106us; 1us; 37us; 1us; 38us; 2us; 39us; 40us; 1us; 40us; 1us; 40us; 1us; 41us; 1us; 42us; 1us; 43us; 1us; 44us; 1us; 45us; 1us; 46us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 2us; 64us; 66us; 3us; 65us; 66us; 79us; 1us; 67us; 2us; 68us; 107us; 1us; 68us; 1us; 69us; 1us; 70us; 2us; 71us; 72us; 2us; 71us; 72us; 2us; 71us; 72us; 1us; 72us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 77us; 1us; 78us; 2us; 79us; 80us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 83us; 4us; 83us; 84us; 87us; 88us; 5us; 83us; 84us; 87us; 88us; 100us; 1us; 83us; 2us; 83us; 84us; 3us; 83us; 84us; 105us; 1us; 83us; 2us; 83us; 84us; 1us; 84us; 1us; 85us; 1us; 86us; 2us; 87us; 88us; 2us; 87us; 88us; 1us; 88us; 2us; 89us; 90us; 1us; 90us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; 1us; 93us; 1us; 93us; 2us; 94us; 95us; 1us; 95us; 1us; 95us; 1us; 97us; 1us; 99us; 1us; 100us; 1us; 100us; 1us; 102us; 2us; 103us; 104us; 1us; 104us; 1us; 104us; 1us; 105us; 1us; 105us; 1us; 107us; 1us; 107us; 1us; 107us; 2us; 109us; 110us; 1us; 110us; 1us; 110us; 1us; 112us; 2us; 113us; 114us; 1us; 114us; 1us; 114us; 2us; 115us; 116us; 1us; 116us; 1us; 116us; 1us; 117us; 1us; 117us; 1us; 118us; 1us; 118us; 1us; 122us; 1us; 123us; 1us; 123us; 1us; 124us; 1us; 124us; 1us; 126us; 1us; 127us; 1us; 128us; 1us; 128us; 1us; 129us; 1us; 130us; 1us; 130us; 1us; 130us; 2us; 131us; 132us; 1us; 132us; 1us; 132us; 1us; 133us; 1us; 133us; 1us; 134us; 1us; 134us; 1us; 134us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 26us; 28us; 48us; 50us; 52us; 72us; 92us; 112us; 132us; 152us; 172us; 192us; 212us; 232us; 252us; 273us; 293us; 313us; 333us; 354us; 374us; 394us; 414us; 434us; 454us; 474us; 494us; 514us; 516us; 518us; 520us; 522us; 524us; 526us; 528us; 530us; 532us; 534us; 536us; 538us; 540us; 542us; 544us; 546us; 548us; 550us; 552us; 554us; 556us; 558us; 560us; 562us; 564us; 566us; 568us; 570us; 572us; 574us; 576us; 578us; 580us; 583us; 585us; 587us; 590us; 592us; 594us; 597us; 599us; 601us; 603us; 605us; 607us; 609us; 611us; 613us; 615us; 617us; 619us; 621us; 623us; 625us; 627us; 629us; 631us; 633us; 635us; 637us; 639us; 641us; 643us; 645us; 647us; 649us; 652us; 656us; 658us; 661us; 663us; 665us; 667us; 670us; 673us; 676us; 678us; 680us; 682us; 684us; 686us; 688us; 691us; 693us; 695us; 697us; 699us; 704us; 710us; 712us; 715us; 719us; 721us; 724us; 726us; 728us; 730us; 733us; 736us; 738us; 741us; 743us; 745us; 747us; 749us; 751us; 753us; 755us; 758us; 760us; 762us; 764us; 766us; 768us; 770us; 772us; 775us; 777us; 779us; 781us; 783us; 785us; 787us; 789us; 792us; 794us; 796us; 798us; 801us; 803us; 805us; 808us; 810us; 812us; 814us; 816us; 818us; 820us; 822us; 824us; 826us; 828us; 830us; 832us; 834us; 836us; 838us; 840us; 842us; 844us; 846us; 849us; 851us; 853us; 855us; 857us; 859us; 861us; |]
let _fsyacc_action_rows = 190
let _fsyacc_actionTableElements = [|15us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 57us; 2us; 58us; 59us; 0us; 49152us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 15us; 32768us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 53us; 4us; 57us; 98us; 0us; 16385us; 15us; 32768us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 53us; 6us; 57us; 98us; 0us; 16386us; 0us; 16387us; 14us; 16388us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 57us; 98us; 9us; 16389us; 15us; 31us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 50us; 39us; 51us; 40us; 52us; 41us; 11us; 16392us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 10us; 16393us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 50us; 39us; 51us; 40us; 52us; 41us; 14us; 16394us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 57us; 98us; 8us; 16395us; 15us; 31us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 50us; 39us; 52us; 41us; 7us; 16396us; 15us; 31us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 50us; 39us; 14us; 16397us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 57us; 98us; 8us; 16412us; 15us; 31us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 50us; 39us; 52us; 41us; 14us; 16413us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 57us; 98us; 12us; 16449us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 13us; 16451us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 57us; 98us; 15us; 32768us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 41us; 101us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 57us; 98us; 14us; 16457us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 57us; 98us; 15us; 16482us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 39us; 143us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 57us; 98us; 14us; 16483us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 57us; 98us; 14us; 16489us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 57us; 98us; 14us; 16492us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 57us; 98us; 14us; 16514us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 57us; 98us; 14us; 16517us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 57us; 98us; 15us; 32768us; 15us; 31us; 19us; 188us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 57us; 98us; 15us; 32768us; 15us; 31us; 23us; 32us; 25us; 189us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 57us; 98us; 14us; 16518us; 15us; 31us; 23us; 32us; 27us; 35us; 31us; 33us; 33us; 42us; 42us; 104us; 44us; 118us; 47us; 99us; 48us; 37us; 49us; 38us; 50us; 39us; 51us; 40us; 52us; 41us; 57us; 98us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 1us; 16509us; 13us; 174us; 0us; 16390us; 1us; 16509us; 13us; 174us; 0us; 16391us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 0us; 16398us; 0us; 16399us; 0us; 16400us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 0us; 16404us; 0us; 16405us; 0us; 16406us; 0us; 16407us; 0us; 16408us; 0us; 16409us; 0us; 16410us; 0us; 16411us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 0us; 16414us; 0us; 16415us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 3us; 16418us; 27us; 170us; 36us; 16505us; 46us; 16505us; 0us; 16419us; 0us; 16420us; 22us; 16490us; 12us; 87us; 15us; 88us; 16us; 89us; 17us; 90us; 18us; 91us; 19us; 92us; 20us; 93us; 21us; 94us; 22us; 95us; 23us; 75us; 24us; 77us; 25us; 78us; 26us; 79us; 27us; 76us; 28us; 80us; 29us; 81us; 30us; 82us; 31us; 83us; 32us; 84us; 33us; 85us; 34us; 86us; 55us; 73us; 0us; 16421us; 0us; 16422us; 1us; 16423us; 38us; 71us; 22us; 32768us; 12us; 87us; 15us; 88us; 16us; 89us; 17us; 90us; 18us; 91us; 19us; 92us; 20us; 93us; 21us; 94us; 22us; 95us; 23us; 75us; 24us; 77us; 25us; 78us; 26us; 79us; 27us; 76us; 28us; 80us; 29us; 81us; 30us; 82us; 31us; 83us; 32us; 84us; 33us; 85us; 34us; 86us; 55us; 73us; 0us; 16424us; 0us; 16425us; 0us; 16426us; 0us; 16427us; 0us; 16428us; 0us; 16429us; 0us; 16430us; 0us; 16431us; 0us; 16432us; 0us; 16433us; 0us; 16434us; 0us; 16435us; 0us; 16436us; 0us; 16437us; 0us; 16438us; 0us; 16439us; 0us; 16440us; 0us; 16441us; 0us; 16442us; 0us; 16443us; 0us; 16444us; 0us; 16445us; 0us; 16446us; 0us; 16447us; 0us; 16448us; 0us; 16448us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 14us; 16495us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 64us; 58us; 59us; 0us; 16452us; 0us; 16453us; 0us; 16454us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 1us; 32768us; 43us; 106us; 1us; 16455us; 35us; 107us; 0us; 16456us; 0us; 16458us; 0us; 16459us; 0us; 16460us; 0us; 16461us; 0us; 16462us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 0us; 16466us; 22us; 32768us; 12us; 87us; 15us; 88us; 16us; 89us; 17us; 90us; 18us; 91us; 19us; 92us; 20us; 93us; 21us; 94us; 22us; 95us; 23us; 75us; 24us; 77us; 25us; 78us; 26us; 79us; 27us; 76us; 28us; 80us; 29us; 81us; 30us; 82us; 31us; 83us; 32us; 84us; 33us; 85us; 34us; 86us; 55us; 73us; 23us; 32768us; 12us; 87us; 15us; 88us; 16us; 89us; 17us; 90us; 18us; 91us; 19us; 92us; 20us; 93us; 21us; 94us; 22us; 95us; 23us; 75us; 24us; 77us; 25us; 78us; 26us; 79us; 27us; 76us; 28us; 80us; 29us; 81us; 30us; 82us; 31us; 83us; 32us; 84us; 33us; 85us; 34us; 86us; 44us; 117us; 55us; 73us; 23us; 16485us; 12us; 87us; 15us; 88us; 16us; 89us; 17us; 90us; 18us; 91us; 19us; 92us; 20us; 93us; 21us; 94us; 22us; 95us; 23us; 75us; 24us; 77us; 25us; 78us; 26us; 79us; 27us; 76us; 28us; 80us; 29us; 81us; 30us; 82us; 31us; 83us; 32us; 84us; 33us; 85us; 34us; 86us; 44us; 117us; 55us; 73us; 1us; 32768us; 45us; 123us; 1us; 32768us; 45us; 124us; 2us; 32768us; 45us; 124us; 48us; 151us; 0us; 16467us; 1us; 16467us; 35us; 125us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 1us; 32768us; 45us; 129us; 1us; 16471us; 35us; 130us; 0us; 16472us; 1us; 16473us; 46us; 132us; 1us; 32768us; 44us; 117us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 14us; 16480us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 1us; 32768us; 43us; 138us; 0us; 16477us; 1us; 16478us; 46us; 140us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 0us; 16479us; 0us; 16481us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 1us; 32768us; 45us; 145us; 0us; 16484us; 0us; 16486us; 1us; 16487us; 46us; 148us; 22us; 32768us; 12us; 87us; 15us; 88us; 16us; 89us; 17us; 90us; 18us; 91us; 19us; 92us; 20us; 93us; 21us; 94us; 22us; 95us; 23us; 75us; 24us; 77us; 25us; 78us; 26us; 79us; 27us; 76us; 28us; 80us; 29us; 81us; 30us; 82us; 31us; 83us; 32us; 84us; 33us; 85us; 34us; 86us; 55us; 73us; 0us; 16488us; 1us; 32768us; 48us; 151us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 1us; 32768us; 36us; 153us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 0us; 16491us; 1us; 16493us; 46us; 156us; 1us; 32768us; 14us; 165us; 0us; 16494us; 0us; 16496us; 1us; 16497us; 46us; 160us; 1us; 32768us; 55us; 167us; 0us; 16498us; 1us; 16499us; 46us; 163us; 1us; 32768us; 14us; 165us; 0us; 16500us; 1us; 32768us; 55us; 167us; 0us; 16501us; 1us; 16505us; 27us; 170us; 0us; 16502us; 0us; 16506us; 1us; 16509us; 13us; 174us; 0us; 16507us; 1us; 32768us; 0us; 175us; 0us; 16508us; 0us; 16510us; 0us; 16511us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 0us; 16512us; 0us; 16513us; 1us; 32768us; 55us; 185us; 1us; 32768us; 30us; 181us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 1us; 16515us; 46us; 183us; 1us; 32768us; 55us; 185us; 0us; 16516us; 1us; 32768us; 48us; 186us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; 14us; 32768us; 12us; 62us; 20us; 60us; 24us; 176us; 28us; 61us; 29us; 187us; 32us; 179us; 34us; 58us; 40us; 100us; 42us; 136us; 44us; 119us; 51us; 57us; 54us; 65us; 55us; 63us; 58us; 59us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 16us; 17us; 32us; 48us; 49us; 65us; 66us; 67us; 82us; 92us; 104us; 115us; 130us; 139us; 147us; 162us; 171us; 186us; 199us; 213us; 229us; 244us; 260us; 275us; 290us; 305us; 320us; 335us; 351us; 367us; 382us; 397us; 412us; 414us; 415us; 417us; 418us; 433us; 448us; 463us; 478us; 493us; 508us; 509us; 510us; 511us; 512us; 513us; 514us; 515us; 516us; 517us; 518us; 519us; 520us; 521us; 522us; 537us; 552us; 553us; 554us; 555us; 556us; 557us; 561us; 562us; 563us; 586us; 587us; 588us; 590us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 634us; 635us; 636us; 637us; 638us; 639us; 654us; 669us; 684us; 685us; 686us; 687us; 702us; 704us; 706us; 707us; 708us; 709us; 710us; 711us; 712us; 713us; 714us; 715us; 716us; 739us; 763us; 787us; 789us; 791us; 794us; 795us; 797us; 798us; 799us; 800us; 802us; 804us; 805us; 807us; 809us; 810us; 811us; 812us; 827us; 829us; 830us; 832us; 847us; 848us; 849us; 864us; 866us; 867us; 868us; 870us; 893us; 894us; 896us; 911us; 913us; 928us; 929us; 931us; 933us; 934us; 935us; 937us; 939us; 940us; 942us; 944us; 945us; 947us; 948us; 950us; 951us; 952us; 954us; 955us; 957us; 958us; 959us; 960us; 975us; 976us; 977us; 979us; 981us; 996us; 998us; 1000us; 1001us; 1003us; 1018us; 1033us; 1048us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 3us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 3us; 3us; 3us; 1us; 1us; 4us; 5us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 3us; 4us; 1us; 3us; 1us; 1us; 3us; 1us; 3us; 0us; 1us; 1us; 3us; 3us; 0us; 1us; 1us; 3us; 3us; 1us; 4us; 1us; 1us; 3us; 0us; 1us; 1us; 3us; 1us; 3us; 2us; 2us; 0us; 1us; 0us; 1us; 2us; 2us; 0us; 1us; 1us; 2us; 1us; 4us; 1us; 3us; 3us; 6us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 1us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 4us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 9us; 9us; 10us; 10us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 11us; 12us; 13us; 13us; 14us; 15us; 16us; 16us; 17us; 18us; 19us; 20us; 20us; 20us; 20us; 21us; 21us; 22us; 23us; 23us; 24us; 25us; 26us; 26us; 27us; 28us; 29us; 29us; 30us; 30us; 31us; 32us; 32us; 33us; 33us; 34us; 34us; 35us; 36us; 36us; 37us; 37us; 38us; 39us; 40us; 41us; 42us; 42us; 43us; 43us; 44us; 44us; 45us; 45us; 46us; 47us; 48us; 48us; 49us; 49us; 50us; 51us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 65535us; 16385us; 65535us; 16386us; 16387us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16390us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 16399us; 16400us; 16401us; 16402us; 16403us; 16404us; 16405us; 16406us; 16407us; 16408us; 16409us; 16410us; 16411us; 65535us; 65535us; 16414us; 16415us; 16416us; 16417us; 16418us; 65535us; 16419us; 16420us; 65535us; 16421us; 16422us; 65535us; 65535us; 16424us; 16425us; 16426us; 16427us; 16428us; 16429us; 16430us; 16431us; 16432us; 16433us; 16434us; 16435us; 16436us; 16437us; 16438us; 16439us; 16440us; 16441us; 16442us; 16443us; 16444us; 16445us; 16446us; 16447us; 16448us; 65535us; 65535us; 65535us; 65535us; 16452us; 16453us; 16454us; 65535us; 65535us; 65535us; 16456us; 16458us; 16459us; 16460us; 16461us; 16462us; 65535us; 16464us; 16465us; 16466us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16467us; 65535us; 16468us; 16469us; 16470us; 65535us; 65535us; 16472us; 65535us; 65535us; 16474us; 16475us; 16476us; 65535us; 65535us; 16477us; 65535us; 65535us; 16479us; 16481us; 65535us; 65535us; 16484us; 16486us; 65535us; 65535us; 16488us; 65535us; 65535us; 65535us; 65535us; 16491us; 65535us; 65535us; 16494us; 16496us; 65535us; 65535us; 16498us; 65535us; 65535us; 16500us; 65535us; 16501us; 65535us; 16502us; 16506us; 65535us; 16507us; 65535us; 16508us; 16510us; 16511us; 65535us; 16512us; 16513us; 65535us; 65535us; 65535us; 65535us; 65535us; 16516us; 65535us; 65535us; 65535us; 65535us; 65535us; |]
let _fsyacc_reductions ()  =    [| 
# 635 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startparse));
# 644 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "Parser.fsy"
                                                       
                             boilerplate + $"{_1}{_2}" 
                           
                   )
# 89 "Parser.fsy"
                 : string));
# 658 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "Parser.fsy"
                                           
                             boilerplate + _1
                         
                   )
# 92 "Parser.fsy"
                 : string));
# 671 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression_a in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "Parser.fsy"
                                          printfn "exp.(%s)" _1; _1 
                   )
# 97 "Parser.fsy"
                 : 'gentype_expression));
# 682 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "Parser.fsy"
                                                       $"{_1}{_2}{_3}" 
                   )
# 100 "Parser.fsy"
                 : 'gentype_expression_a));
# 695 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "Parser.fsy"
                                                        $"{_1}{_2}{_3}" 
                   )
# 101 "Parser.fsy"
                 : 'gentype_expression_a));
# 708 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_nullable_primitive_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "Parser.fsy"
                                                                    $"{_1}{_2}{_3}" 
                   )
# 102 "Parser.fsy"
                 : 'gentype_expression_a));
# 721 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_nullable_primitive_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "Parser.fsy"
                                                                    $"{_1}{_2}{_3}" 
                   )
# 103 "Parser.fsy"
                 : 'gentype_expression_a));
# 734 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "Parser.fsy"
                                                       printfn "eq exp.(%s)" $"{_1}{_2}{_3}"; $"{_1}{_2}{_3}" 
                   )
# 104 "Parser.fsy"
                 : 'gentype_expression_a));
# 747 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "Parser.fsy"
                                                       $"{_1}{_2}{_3}" 
                   )
# 105 "Parser.fsy"
                 : 'gentype_expression_a));
# 760 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "Parser.fsy"
                                                                        $"{_1}{_2}{_3}" 
                   )
# 106 "Parser.fsy"
                 : 'gentype_expression_a));
# 773 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "Parser.fsy"
                                                                      $"{_1}{_2}{_3}" 
                   )
# 107 "Parser.fsy"
                 : 'gentype_expression_a));
# 786 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "Parser.fsy"
                                                                             $"{_1}{_2}{_3}" 
                   )
# 108 "Parser.fsy"
                 : 'gentype_expression_a));
# 799 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "Parser.fsy"
                                                         $"{_1}{_2}{_3}" 
                   )
# 109 "Parser.fsy"
                 : 'gentype_expression_a));
# 812 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_unary_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "Parser.fsy"
                                               _1 
                   )
# 110 "Parser.fsy"
                 : 'gentype_expression_a));
# 823 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_literal_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "Parser.fsy"
                                                 _1 
                   )
# 111 "Parser.fsy"
                 : 'gentype_expression_a));
# 834 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_let_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "Parser.fsy"
                                             _1 
                   )
# 112 "Parser.fsy"
                 : 'gentype_expression_a));
# 845 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_if_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "Parser.fsy"
                                            _1 
                   )
# 113 "Parser.fsy"
                 : 'gentype_expression_a));
# 856 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_identifier_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "Parser.fsy"
                                                    _1 
                   )
# 114 "Parser.fsy"
                 : 'gentype_expression_a));
# 867 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_invoke_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "Parser.fsy"
                                                _1 
                   )
# 115 "Parser.fsy"
                 : 'gentype_expression_a));
# 878 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_forward_pipeline_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "Parser.fsy"
                                                          _1 
                   )
# 116 "Parser.fsy"
                 : 'gentype_expression_a));
# 889 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_parenthesized_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "Parser.fsy"
                                                       _1 
                   )
# 117 "Parser.fsy"
                 : 'gentype_expression_a));
# 900 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_list_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "Parser.fsy"
                                              _1 
                   )
# 118 "Parser.fsy"
                 : 'gentype_expression_a));
# 911 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_record_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "Parser.fsy"
                                                _1 
                   )
# 119 "Parser.fsy"
                 : 'gentype_expression_a));
# 922 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "Parser.fsy"
                                                  _1 
                   )
# 120 "Parser.fsy"
                 : 'gentype_expression_a));
# 933 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_each_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "Parser.fsy"
                                              _1 
                   )
# 121 "Parser.fsy"
                 : 'gentype_expression_a));
# 944 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_item_access_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "Parser.fsy"
                                                     _1 
                   )
# 122 "Parser.fsy"
                 : 'gentype_expression_a));
# 955 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field_access_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "Parser.fsy"
                                                      _1 
                   )
# 123 "Parser.fsy"
                 : 'gentype_expression_a));
# 966 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "Parser.fsy"
                                                           $"{_1}{_2}" 
                   )
# 127 "Parser.fsy"
                 : 'gentype_unary_expression));
# 978 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "Parser.fsy"
                                             $"{_1}{_2}" 
                   )
# 128 "Parser.fsy"
                 : 'gentype_unary_expression));
# 990 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "Parser.fsy"
                                     printfn "literal exp.(%s)" _1; _1 
                   )
# 131 "Parser.fsy"
                 : 'gentype_literal_expression));
# 1001 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "Parser.fsy"
                                  _1 
                   )
# 132 "Parser.fsy"
                 : 'gentype_literal_expression));
# 1012 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "Parser.fsy"
                                   _1 
                   )
# 133 "Parser.fsy"
                 : 'gentype_literal_expression));
# 1023 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "Parser.fsy"
                                  _1 
                   )
# 134 "Parser.fsy"
                 : 'gentype_literal_expression));
# 1034 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "Parser.fsy"
                                        printfn "identifier exp(%s)" _1; _1 
                   )
# 138 "Parser.fsy"
                 : 'gentype_identifier_expression));
# 1045 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "Parser.fsy"
                                                   $"Usagi_Nakamura.Curry({_1})" 
                   )
# 139 "Parser.fsy"
                 : 'gentype_identifier_expression));
# 1056 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_generalized_identifier_part in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "Parser.fsy"
                                                         _1 
                   )
# 142 "Parser.fsy"
                 : 'gentype_generalized_identifier));
# 1067 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_generalized_identifier in
            let _2 = parseState.GetInput(2) :?> 'gentype_generalized_identifier_part in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "Parser.fsy"
                                                                                $"{_1}{_2}" 
                   )
# 143 "Parser.fsy"
                 : 'gentype_generalized_identifier));
# 1079 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_generalized_identifier_segment in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "Parser.fsy"
                                                          _1 
                   )
# 146 "Parser.fsy"
                 : 'gentype_generalized_identifier_part));
# 1090 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_keyword_or_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "Parser.fsy"
                                                    _1 
                   )
# 149 "Parser.fsy"
                 : 'gentype_generalized_identifier_segment));
# 1101 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_keyword_or_identifier in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_keyword_or_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "Parser.fsy"
                                                                              $"{_1}{_2}{_3}" 
                   )
# 150 "Parser.fsy"
                 : 'gentype_generalized_identifier_segment));
# 1114 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "Parser.fsy"
                                        _1 
                   )
# 153 "Parser.fsy"
                 : 'gentype_keyword_or_identifier));
# 1125 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_keyword_not_starting_hash in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "Parser.fsy"
                                                       _1 
                   )
# 154 "Parser.fsy"
                 : 'gentype_keyword_or_identifier));
# 1136 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "Parser.fsy"
                                 _1 
                   )
# 157 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1147 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "Parser.fsy"
                                _1 
                   )
# 158 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1158 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "Parser.fsy"
                                  _1 
                   )
# 159 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1169 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "Parser.fsy"
                                  _1 
                   )
# 160 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1180 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "Parser.fsy"
                                   _1 
                   )
# 161 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1191 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "Parser.fsy"
                                   _1 
                   )
# 162 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1202 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "Parser.fsy"
                                _1 
                   )
# 163 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1213 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "Parser.fsy"
                                _1 
                   )
# 164 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1224 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "Parser.fsy"
                                _1 
                   )
# 165 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1235 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "Parser.fsy"
                                 _1 
                   )
# 166 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1246 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "Parser.fsy"
                                  _1 
                   )
# 167 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1257 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "Parser.fsy"
                                 _1 
                   )
# 168 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1268 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "Parser.fsy"
                                  _1 
                   )
# 169 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1279 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "Parser.fsy"
                                _1 
                   )
# 170 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1290 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "Parser.fsy"
                                       _1
                   )
# 171 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1301 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "Parser.fsy"
                                     _1 
                   )
# 172 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1312 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "Parser.fsy"
                                    _1 
                   )
# 173 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1323 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "Parser.fsy"
                                  _1 
                   )
# 174 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1334 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "Parser.fsy"
                                  _1 
                   )
# 175 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1345 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "Parser.fsy"
                                 _1 
                   )
# 176 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1356 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "Parser.fsy"
                                  _1 
                   )
# 177 "Parser.fsy"
                 : 'gentype_keyword_not_starting_hash));
# 1367 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> 'gentype_invoke_parameter_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "Parser.fsy"
                                                            printfn "invoke exp.(%s)" $"{_1}{_2}"; $"{_1}{_2}" 
                   )
# 180 "Parser.fsy"
                 : 'gentype_invoke_expression));
# 1379 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "Parser.fsy"
                                                   $"({_2})" 
                   )
# 183 "Parser.fsy"
                 : 'gentype_invoke_parameter_list));
# 1391 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_expression in
            let _3 = parseState.GetInput(3) :?> 'gentype_invoke_parameter_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "Parser.fsy"
                                                                         $"({_2}){_3}" 
                   )
# 184 "Parser.fsy"
                 : 'gentype_invoke_parameter_list));
# 1404 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "Parser.fsy"
                                                                           $"{_3}({_1})" 
                   )
# 187 "Parser.fsy"
                 : 'gentype_forward_pipeline_expression));
# 1417 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_expression in
            let _3 = parseState.GetInput(3) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "Parser.fsy"
                                                                              $"{_1}{_2}{_3}" 
                   )
# 190 "Parser.fsy"
                 : 'gentype_parenthesized_expression));
# 1430 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_item_selection in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "Parser.fsy"
                                            _1 
                   )
# 198 "Parser.fsy"
                 : 'gentype_item_access_expression));
# 1441 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_optional_item_selection in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "Parser.fsy"
                                                     _1 
                   )
# 199 "Parser.fsy"
                 : 'gentype_item_access_expression));
# 1452 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_item_selector in
            let _4 = parseState.GetInput(4) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "Parser.fsy"
                                                                                  $"{_1}{_2}{_3}{_4}"
                   )
# 201 "Parser.fsy"
                 : 'gentype_item_selection));
# 1466 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_item_selector in
            let _4 = parseState.GetInput(4) :?> string in
            let _5 = parseState.GetInput(5) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "Parser.fsy"
                             $"{_1}{_2}{_3}{_4}{_5}"
                   )
# 204 "Parser.fsy"
                 : 'gentype_optional_item_selection));
# 1481 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "Parser.fsy"
                                         _1 
                   )
# 206 "Parser.fsy"
                 : 'gentype_item_selector));
# 1492 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field_selection in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "Parser.fsy"
                                             _1 
                   )
# 214 "Parser.fsy"
                 : 'gentype_field_access_expression));
# 1503 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_implicit_target_field_selection in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "Parser.fsy"
                                                             _1 
                   )
# 215 "Parser.fsy"
                 : 'gentype_field_access_expression));
# 1514 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_projection in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "Parser.fsy"
                                        _1 
                   )
# 216 "Parser.fsy"
                 : 'gentype_field_access_expression));
# 1525 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_implicit_target_projection in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "Parser.fsy"
                                                        _1 
                   )
# 217 "Parser.fsy"
                 : 'gentype_field_access_expression));
# 1536 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> 'gentype_field_selector in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "Parser.fsy"
                                                       $"{_1}{_2}"
                   )
# 220 "Parser.fsy"
                 : 'gentype_field_selection));
# 1548 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_field_selector in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "Parser.fsy"
                                                                 
                             $"{_1}{_2}{_3}"
                         
                   )
# 221 "Parser.fsy"
                 : 'gentype_field_selection));
# 1563 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field_selector in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "Parser.fsy"
                                           _1 
                   )
# 226 "Parser.fsy"
                 : 'gentype_implicit_target_field_selection));
# 1574 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_required_field_selector in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "Parser.fsy"
                                                     _1 
                   )
# 229 "Parser.fsy"
                 : 'gentype_field_selector));
# 1585 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_optional_field_selector in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "Parser.fsy"
                                                     _1 
                   )
# 230 "Parser.fsy"
                 : 'gentype_field_selector));
# 1596 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_field_name in
            let _3 = parseState.GetInput(3) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "Parser.fsy"
                                                                                     
                             $"{_1}{_2}{_3}"
                         
                   )
# 233 "Parser.fsy"
                 : 'gentype_required_field_selector));
# 1611 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_field_name in
            let _3 = parseState.GetInput(3) :?> string in
            let _4 = parseState.GetInput(4) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "Parser.fsy"
                                                                                                   
                             $"{_1}{_2}{_3}{_4}"
                         
                   )
# 238 "Parser.fsy"
                 : 'gentype_optional_field_selector));
# 1627 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> 'gentype_required_projection in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "Parser.fsy"
                                                             $"{_1}{_2} "
                   )
# 243 "Parser.fsy"
                 : 'gentype_projection));
# 1639 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> 'gentype_optional_projection in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "Parser.fsy"
                                                             $"{_1}{_2} "
                   )
# 244 "Parser.fsy"
                 : 'gentype_projection));
# 1651 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_required_selector_list in
            let _3 = parseState.GetInput(3) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "Parser.fsy"
                                                                                                  
                             $"{_1}{_2}{_3}"
                         
                   )
# 247 "Parser.fsy"
                 : 'gentype_required_projection));
# 1666 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_required_selector_list in
            let _3 = parseState.GetInput(3) :?> string in
            let _4 = parseState.GetInput(4) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 "Parser.fsy"
                                                                                                                
                             $"{_1}{_2}{_3}{_4}"
                         
                   )
# 252 "Parser.fsy"
                 : 'gentype_optional_projection));
# 1682 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_required_field_selector in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "Parser.fsy"
                                                      _1 
                   )
# 257 "Parser.fsy"
                 : 'gentype_required_selector_list));
# 1693 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_required_field_selector in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_required_selector_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 "Parser.fsy"
                                                                                  
                             $"{_1}{_2}{_3}"
                         
                   )
# 258 "Parser.fsy"
                 : 'gentype_required_selector_list));
# 1708 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_required_projection in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 263 "Parser.fsy"
                                                  _1 
                   )
# 263 "Parser.fsy"
                 : 'gentype_implicit_target_projection));
# 1719 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_optional_projection in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 "Parser.fsy"
                                                  _1 
                   )
# 264 "Parser.fsy"
                 : 'gentype_implicit_target_projection));
# 1730 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_item_list_opt in
            let _3 = parseState.GetInput(3) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 272 "Parser.fsy"
                                                                     $"{_1}{_2}{_3}" 
                   )
# 272 "Parser.fsy"
                 : 'gentype_list_expression));
# 1743 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_item in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 275 "Parser.fsy"
                                  _1 
                   )
# 275 "Parser.fsy"
                 : 'gentype_item_list));
# 1754 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_item in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_item_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 276 "Parser.fsy"
                                                  $"{_1}{_2}{_3}" 
                   )
# 276 "Parser.fsy"
                 : 'gentype_item_list));
# 1767 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 279 "Parser.fsy"
                                         "" 
                   )
# 279 "Parser.fsy"
                 : 'gentype_item_list_opt));
# 1777 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_item_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 280 "Parser.fsy"
                                       _1 
                   )
# 280 "Parser.fsy"
                 : 'gentype_item_list_opt));
# 1788 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 283 "Parser.fsy"
                                        _1 
                   )
# 283 "Parser.fsy"
                 : 'gentype_item));
# 1799 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 284 "Parser.fsy"
                                                          $"{_1}{_2}{_3}" 
                   )
# 284 "Parser.fsy"
                 : 'gentype_item));
# 1812 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_field_list_opt in
            let _3 = parseState.GetInput(3) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 291 "Parser.fsy"
                                                                                           $"{_1}{_2}{_3}" 
                   )
# 291 "Parser.fsy"
                 : 'gentype_record_expression));
# 1825 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 294 "Parser.fsy"
                                         "" 
                   )
# 294 "Parser.fsy"
                 : 'gentype_field_list_opt));
# 1835 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 295 "Parser.fsy"
                                         _1 
                   )
# 295 "Parser.fsy"
                 : 'gentype_field_list_opt));
# 1846 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 298 "Parser.fsy"
                                    _1 
                   )
# 298 "Parser.fsy"
                 : 'gentype_field_list));
# 1857 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_field_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 299 "Parser.fsy"
                                                     $"{_1}{_2}{_3}" 
                   )
# 299 "Parser.fsy"
                 : 'gentype_field_list));
# 1870 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_field_name in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 302 "Parser.fsy"
                                                      $"{_1}{_2}{_3}" 
                   )
# 302 "Parser.fsy"
                 : 'gentype_field));
# 1883 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_generalized_identifier in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 305 "Parser.fsy"
                                                    printfn "gi=%s" _1; _1 
                   )
# 305 "Parser.fsy"
                 : 'gentype_field_name));
# 1894 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_parameter_list_opt in
            let _3 = parseState.GetInput(3) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_function_body in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 313 "Parser.fsy"
                             $"{_1}{_2}{_3}{_4}" 
                   )
# 313 "Parser.fsy"
                 : 'gentype_function_expression));
# 1908 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 316 "Parser.fsy"
                                      _1 
                   )
# 316 "Parser.fsy"
                 : 'gentype_function_body));
# 1919 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fixed_parameter_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 319 "Parser.fsy"
                                                  _1 
                   )
# 319 "Parser.fsy"
                 : 'gentype_parameter_list));
# 1930 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fixed_parameter_list in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_optional_parameter_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 320 "Parser.fsy"
                                                                                $"{_1}{_2}{_3}" 
                   )
# 320 "Parser.fsy"
                 : 'gentype_parameter_list));
# 1943 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 323 "Parser.fsy"
                                         "" 
                   )
# 323 "Parser.fsy"
                 : 'gentype_parameter_list_opt));
# 1953 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_parameter_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 324 "Parser.fsy"
                                            _1 
                   )
# 324 "Parser.fsy"
                 : 'gentype_parameter_list_opt));
# 1964 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_parameter in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 327 "Parser.fsy"
                                       _1 
                   )
# 327 "Parser.fsy"
                 : 'gentype_fixed_parameter_list));
# 1975 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_parameter in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_fixed_parameter_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 328 "Parser.fsy"
                                                                  $"{_1}{_2}{_3}" 
                   )
# 328 "Parser.fsy"
                 : 'gentype_fixed_parameter_list));
# 1988 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_optional_parameter in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 331 "Parser.fsy"
                                                 _1 
                   )
# 331 "Parser.fsy"
                 : 'gentype_optional_parameter_list));
# 1999 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_optional_parameter in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_optional_parameter_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 332 "Parser.fsy"
                                                                               $"{_1}{_2}{_3}" 
                   )
# 332 "Parser.fsy"
                 : 'gentype_optional_parameter_list));
# 2012 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_parameter in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 335 "Parser.fsy"
                                                $"{_1}{_2}" 
                   )
# 335 "Parser.fsy"
                 : 'gentype_optional_parameter));
# 2024 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_parameter_type_opt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 338 "Parser.fsy"
                                                           $"{_1}{_2}" 
                   )
# 338 "Parser.fsy"
                 : 'gentype_parameter));
# 2036 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 341 "Parser.fsy"
                                         "" 
                   )
# 341 "Parser.fsy"
                 : 'gentype_return_type_opt));
# 2046 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_assertion in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 342 "Parser.fsy"
                                       _1 
                   )
# 342 "Parser.fsy"
                 : 'gentype_return_type_opt));
# 2057 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 345 "Parser.fsy"
                                         "" 
                   )
# 345 "Parser.fsy"
                 : 'gentype_parameter_type_opt));
# 2067 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_assertion in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 346 "Parser.fsy"
                                       _1 
                   )
# 346 "Parser.fsy"
                 : 'gentype_parameter_type_opt));
# 2078 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_nullable_primitive_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 349 "Parser.fsy"
                                                      $"{_1}{_2}" 
                   )
# 349 "Parser.fsy"
                 : 'gentype_assertion));
# 2090 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_nullable_opt in
            let _2 = parseState.GetInput(2) :?> 'gentype_primitive_type in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 352 "Parser.fsy"
                                                         $"{_1}{_2}" 
                   )
# 352 "Parser.fsy"
                 : 'gentype_nullable_primitive_type));
# 2102 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 355 "Parser.fsy"
                                         "" 
                   )
# 355 "Parser.fsy"
                 : 'gentype_nullable_opt));
# 2112 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 356 "Parser.fsy"
                                      _1 
                   )
# 356 "Parser.fsy"
                 : 'gentype_nullable_opt));
# 2123 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 359 "Parser.fsy"
                                                                 _1 
                   )
# 359 "Parser.fsy"
                 : 'gentype_primitive_type));
# 2134 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_each_expression_body in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 367 "Parser.fsy"
                                                       $"{_1}{_2}" 
                   )
# 367 "Parser.fsy"
                 : 'gentype_each_expression));
# 2146 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_function_body in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 370 "Parser.fsy"
                                           _1 
                   )
# 370 "Parser.fsy"
                 : 'gentype_each_expression_body));
# 2157 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_variable_list in
            let _3 = parseState.GetInput(3) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 380 "Parser.fsy"
                             printfn "pass"; $"{_1}{_2}{_3}{_4}" 
                   )
# 380 "Parser.fsy"
                 : 'gentype_let_expression));
# 2171 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_variable in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 383 "Parser.fsy"
                                      _1 
                   )
# 383 "Parser.fsy"
                 : 'gentype_variable_list));
# 2182 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_variable in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_variable_list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 384 "Parser.fsy"
                                                          $"{_1}{_2}{_3}" 
                   )
# 384 "Parser.fsy"
                 : 'gentype_variable_list));
# 2195 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 387 "Parser.fsy"
                                                      printfn "variable(%s)" $"{_1}{_2}{_3}"; $"{_1}{_2}{_3}" 
                   )
# 387 "Parser.fsy"
                 : 'gentype_variable));
# 2208 "Parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_expression in
            let _3 = parseState.GetInput(3) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_expression in
            let _5 = parseState.GetInput(5) :?> string in
            let _6 = parseState.GetInput(6) :?> 'gentype_expression in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 395 "Parser.fsy"
                                                                           $"{_1}{_2}{_3}{_4}{_5}{_6}" 
                   )
# 395 "Parser.fsy"
                 : 'gentype_if_expression));
|]
# 2225 "Parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 62;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let parse lexer lexbuf : string =
    engine lexer lexbuf 0 :?> _
